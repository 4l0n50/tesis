In this thesis we constructed many new and more efficient non-interactive  zero-knowledge proofs. We showed that any set of quadratic equations of the type $b(b-1)=0$ and any set of linear equations with variables in $\Z_q$ have a proof whose size is independent of the number of equations. In the case of equations where variables are group elements, we showed that any set of linear equations has a proof whose size is independent of the number of equations, with the drawback that the CRS must be fixed to the specific set of equations.

Then we moved to the case of set-membership proofs, which can be equivalently seen as higher degree equations -- a proof of membership in the set of roots of a polynomial $p$ is a proof that $p(x)=0$ in the case where the variables are $\Z_q$ elements -- and has the advantage that can also be applied to the case where the variables are group elements (since it is not clear how to define higher degree equations where variables are group elements). First, we showed that for any fixed set $S$, the statement $x_1,\ldots,x_n\in S$ can be proven with a proof whose size is linear in the size of the set and but independent of the number of proofs. 
Finally, we considered the cases of non-fixed subsets of $\Z_q$ and (again) the case of fixed subset of $\GG_s$. For both cases we obtained even more efficient proofs. Specifically, we constructed proofs of size logarithmic in the size of the set and independent of the number of proofs.

With these results we constructed more efficient proofs of equal commitment opening, threshold Groth-Sahai proofs, ring signatures, proofs of correctness of a shuffle, and range proofs.

At the heart of most of our results was a new variant of Pedersen commitments and Groth-Sahai commitments, which we call extended multi-Pedersen commitments (MP commitments). MP commitments are length-reducing --they require less than $n$ group elements to commit to a vector in $\Z_q^n$-- which imply that they can not be perfectly binding. However, they can be perfectly binding at one coordinate (encoded in the commitment key) and behave as Groth-Sahai commitments at that coordinate (in fact, when $n=1$ MP commitments become Groth-Sahai commitments).

The major drawback of our results is its limited generality: (essentially) they only allow more efficient proofs for integer equations modulo $q$. When variables and constants are group elements, the results are much more limited. Indeed, they only work in the case of ``fixed equations'' or ``fixed sets'', and they do not apply at all for quadratic pairing product equations. The reason for this limitation is our dependency on MP commitments. Our extensions to group equations (or set-membership in $S\subset\GG_s$) essentially precomputes MP commitments for a fixed set of witness samplable group elements, that is, it is possible to sample the discrete logarithms and thus to compute MP commitments when setting up the CRS. This is of course not enough for general equations where group elements may be adversarially chosen and thus, there is no hope to compute its discrete logarithms. In fact, it can be shown that there does not exist an analogous of MP commitments for group elements. Indeed, Abe et al.~showed that is impossible to construct length-reducing group to group commitments \cite{EC:AbeHarOhk12} -- i.e.~commitment schemes that take $n$ group elements as arguments and return a commitment whose size is $o(n)$ group elements.\footnote{Abe et al.~constructed group to group length-reducing structure preserving commitments relaxing the binding property \cite{EC:AKOT15}. However, since their commitment scheme is not homomorphic, it is far from clear how to use them to construct NIZK proofs.} 

This is in fact a practical limitation. Consider the case of ring signatures, where the central problem is to show that some secret verification key $vk\in R$, and $R$ is the set of all verification keys in the ring. This is just a (non-aggregated) set-membership proof, for which we constructed logarithmic proofs whenever the set is fixed. However, using our set-membership proofs the result is unsatisfactory: there is a single ring $R$ (or a constant number of rings) for which one can construct a logarithmic size ring signatures. This is not a ring signature.
%Consider for example the case of shuffles, where the central problem is to show that the set of input plain-texts is in the set of output plain-texts (this is an oversimplification but it suffices for our explanation) and the plain-text are group elements. One may thus have the hope to build a $\Theta(\log n)$, where $n$ is the number of plain-texts, if the set where we prove membership is fixed (and if we solve the problem that in fact we need to show that the decryption of the cyphertexts are). Then all the possible messages for which we can use the proof system is fixed. This is in fact impractical. Proofs of correctness of a shuffle are typically used within Mix-nets, which are in turn used within anonymous protocols such as ToR. Limiting the set of possible messages 

On the other hand, (quadratic) integer equations are general enough to encode any NP problem (quadratic integer equations can be shown NP-complete). In fact, any circuit $C:\bits^m\to \bits$ can be encoded into a set of quadratic equations which is satisfiable iff $C$ is satisfiable.
One may thus hope that our techniques could help on improving NIZK proofs for Circuit-Sat under falsifiable assumptions. The shortest proofs remains those of Groth et al.~\cite{EC:GroOstSah06}.\footnote{In another work, Groth et al.~showed how to use \emph{fully homomorphic encryption} to obtain a more efficient proof \cite{JC:GGIPSS15}. However, fully homomorphic encryption is still a developing primitive and finding alternative solutions is an interesting open problem.} Essentially, Groth et al.'s proof computes a perfectly binding commitment to a satisfying assignment, requiring $\Theta(m)$ group elements, and computes perfectly binding commitments to the outputs of each gate and NIZK proofs that the output of each gate is correctly computed. The correctness of the output of each gate is expressed as the satisfiability of an integer equation, so essentially Groth et al.'s proof is $\Theta(m)+\Theta(\#\mathrm{equations})$, where $\Theta(\#\mathrm{equations})=\Theta(\#\mathrm{gates})=\Theta(|C|)$.
With our techniques we get a proof of size $\Theta(m)+\Theta(|\pi|)$, where the $\Theta(m)$ term comes from commitments to variables and the $\Theta(|\pi|)$ term comes from the proof that those variables satisfy the equations. In this thesis we basically show that for many equations $|\pi|\in o(\#\mathrm{equations})$, so this could be a good indication that we can beat Groth at al's proof.

We discuss a little more about the generality/non-generality of integer equations. Indeed, we have said that our techniques are limited because they only work for integer equations, but then we pointed out that integer equations are general enough (in fact NP-complete). Can we encode general pairing product equations as integer equations? The answer is affirmative: group operations, pairings, exponentiations, etc.~can be written in terms of quadratic integer equations and thus, any pairing product equation can be written as a polynomial number of quadratic integer equations. Thus we may hope to encode pairing product equations into integer equations and use our results to improve proofs for pairing product equations. We can even use constant-size NIZK proofs for NP from Gennaro et al.~\cite{EC:GGPR13} to construct constant-size proofs of the satisfiability of any set of pairing-product equation.

However, we think that in this way the question is not properly answered. In fact, pairing product equations and Groth-Sahai proofs are usually used in the context of \emph{structure preserving cryptography}, which essentially  means that everything is done through the operations provided by the bilinear groups (essentially in the generic group model). If we reduce pairing product equations from an NP-complete problem, we are transforming group operations and all the group structure to operations over $\Z_q$. Furthermore, even from a practical point of view, the reduction from an NP-complete problem involves an overhead (at least in the prover's complexity) of reducing the instance to the satisfiability of a circuit which may be prohibitive. Therefore, we believe that it is worth to search more efficient proofs for pairing product equations (or impossibility results) in the generic group model.

Finally we comment that there is also much room for optimization in our results. Maybe the worst part of our NIZK proofs that $b_1,\ldots b_n\in\bits$ and set-membership proofs is the quadratic sizes of the CRS. This usually implies that the prover's time complexity is also quadratic, since the CRS defines the set of generators of a vector space and the proof is a linear combination of of the generators. This in general requires to compute a quadratic number of exponentiations ($x[g]$)  and additions ($[g]+[h]$).\footnote{Except when the coefficients that define the witness are in $\bits$ (as in the proof that $b_1\ldots b_n\in\bits$), where it only requires a linear number of exponentiations and a quadratic number of additions.} We showed that for weight 1 this problem can be avoided, but in general it is an open question if one can do better than this.

Proof sizes are also a good candidate for optimization. Starting from our proofs for linear subspaces of $\GG_1\times\GG_2$, it is interesting to know if there is, even in the generic group model, a shorter proof or a lower bound on the proof size. The same applies for quadratic equations and set-membership proofs.

\iffalse
While set-membership proofs seems quite useful, there are protocols for which they are not enough. Consider the case of shuffles, there one would like to prove that the set of output plaintexts belongs to the set of input plaintexts but without repetitions. 


In Chapter \ref{sec:agg-asym} we constructed more efficient proofs for sets of linear equations over $\Z_q$ and $\GG_s$. Our results extends the result of Jutla and Roy \cite{C:JutRoy14} from one-sided to two-sided equations. We also showed that the same techniques allows to build QA-NIZK constant size proofs of membership in linear subspaces of $\GG_1\times\GG_2$, which extends the constant size QA-NIZK of membership in linear subspaces of $\GG_s$. Finally we showed how to extend the linearly homomorphic structure-Preserving signatures of Libert et al. \cite{EC:LPJY14} from the message space $\GG_s^n$ to $\GG_1^m\times\GG_2^n$.

In Chapter \ref{sec:bits} we constructed a constant-size QA-NIZK proof that a set of commitments open to a bit-string or equivalently, we showed that a set of equations of the type $b(b-1)=0$ has a proof of size linear in the number of variables and independent of the number of equations. In the first part of the chapter we devoted to case where the commitment is perfectly binding and then showed that it allowed more efficient ring signatures and threshold Groth-Sahai proofs. In the second part we devoted to case where the commitment is computationally binding and length-reducing. We introduced an extension of Pedersen commitments and showed that for these commitments we can build a QA-NIZK proof that there exists an opening in $\bits^n$.

In Chapter \ref{sec:shuf-rp} we constructed QA-NIZK proofs that many commitments open to elements in a set, where the proof size is linear in the size of the set and independent of the number of commitments. We then showed how to use this this primitive to construct more efficient proofs of correctness of a shuffle and range proof under standard assumptions.

In Chapter \ref{sec:extras} we showed how to construct a more efficient ring signature and also showed that the results from Chapter \ref{sec:shuf-rp} can be generalized and improved to logarithmic size proofs.

\section{Open Problems}

\subsubsection{Aggregation of any Groth-Sahai Proof}
One of the main problems that remains open is to extend (or give an impossibility result) the efficiency improvements to any kind of equation, that is, construct proofs for a set of pairing product equations of size linear in the number of variables and independent of the number of equations. One indication that this could be impossible is the fact that shrinking group to group commitments do not exists \cite{EC:AbeHarOhk12} and that in our results for quadratic equations over $\Z_q$ we used in a crucial way the multi-Pedersen commitments (which are shrinking commitments). A related or more simple question is whether linear equations over $\GG_s$ allow more efficient proofs without computing an ad-hoc CRS. We note that this case suffer the same problem, since for example the values 
$$\left\{\pmatri{{[a_{1,1}]_1}\\\vdots\\{[a_{1,k}]_1}},\ldots,\pmatri{{[a_{n,1}]_1}\\\vdots\\{[a_{n,k}]_1}}\right\}$$
included in the CRS can be thought as commitment keys of a length reducing commitment scheme (much like multi-Pedersen commitments). The fact that the discrete logarithms of the equation's constants appears multiplied by these commitment keys is to allow to compute a length reducing commitment of the constants of the equation.

The impossibility result of Abe et al. is proven when the key generation and commitment functions are {algebraic}, that is, the group elements are only ``manipulated'' using the group operations and its actual representation is ignored.
A possible avenue to bypass this impossibility is to take in count the actual representation of group elements. For example, we can commit to the binary representation of a group element using multi-Pedersen commitments. The problem now is that the commitment is not homomorphic and it is not straightforward to use use with Groth-Sahai proofs. However, it should be still theoretically possible if we rely on general results for NP-complete languages, as done in Section~\ref{sec:log-ring-signature}.
Indeed, the NP-completeness of quadratic equations over $\Z_q$ allows to translate any set of pairing product equations to a set of quadratic equations over $\Z_q$. For example to translate an equation $e([x]_1,[y]_2)=[0]_T$, we can consider the circuit which computes the function $C_e:\bits^{\ell_1}\times \bits^{\ell_2} \to\bits^{\ell_T}$, where $\ell_s$ is the size of the representation of an element of $\GG_s$, and express the circuit as a set of quadratic equations.

\subsubsection{More efficient proofs of quadratic equations}
Mostly all of our constructions derived from the proofs that many commitments open to a bit-string suffer from the same drawback: the CRS is quadratic in the size of the bit-string, which of course limits their applicability. In Section~\ref{sec:bits-extensions} we showed that when the bit-string is of weight 1 the CRS can be made linear, however this is not always the case and the problem is still open.
%Bootle et al. \cite{EC:BCCGP16} construct a proof system which, although in a different setting, would help to shed lights on how to solve this problem. There, at some of the protocol, it is computed a set of elements which can be arranged matrix such that the $i,j$ th is the coefficient of the monomial $x^{i-j}$. Thereby, all elements at positions $i,j$ such that $i-j=k$ are coefficients of the same monomial $x^k$. Despite this very informal description, we can apply this idea as follows: compute commitments keys $[\vecb{g}_i],[\vecb{h}_j]_2$ in such a way that $\vecb{g}_i\vecb{h}_j=\vecb{g}_{k+i} \vecb{h+k}^\top$ .
 
\subsubsection{Theoretical $\Theta(\log n)$ Shuffles}
It is interesting to explore if similar techniques to those from Section~\ref{sec:log-ring-signature} allow to construct a $\Theta(\log n)$ proof of correctness of a shuffle. The improved aZKSMP should allow to almost prove that a set of ciphertexts are a correct shuffle. We say almost, because the aZKSMP only allows to show that each output-plaintext is in the set of input-plaintexts and thus there might be repeated elements. The challenge is then to show that the aZKSMP do not contain repeated indices.

\subsubsection{Extend results for high-degree equations to circuits}
Gentry and Wichs showed that any sublinear NIZK proof must rely on non-falsifiable  assumptions if the language is ``hard'' (say an NP-hard language) \cite{STOC:GenWic11}. This result seems to rule out any sublinear NIZK proof if the assumption is any ``DDH-like'' assumption. However, many cryptographically interesting languages are seem not to be NP-hard. For example, the language of vectors in a subspace of $\GG_1$ seems not be NP-hard and has constant size proofs. In fact, what we believe that is happening is that the language is in fact ``easy'' given the appropriate trapdoor (in this case a basis of the kernel of the generating matrix) while an NP-hard language should not have such a trapdoor.

In general, in many languages the statement is the commitment to some value and we want to prove some assertion about the opening. Given a circuit $C$ and a commitment key $ck$, we define the following language
$$
\Lang_{ck,C}:= \{([\vecb{c}_1]_1,\ldots,[\vecb{c}_n]_1,a)\in\GG_1^2\times\bits^k:= \exists [x_i]_1\in\GG_1,w_i\in\Z_q \text{ s.t. } [\vecb{c}_i]_1=\GS.\Com_{ck}([x_i]_1;w_i)\text{ and }C([x]_1,a)=1\}.
$$
Many interesting problems can be instantiated in this way: in ring signatures $[x]_1$ is the verification key, $a$ the description of the ring, and $C$ outputs 1 iff $[x]_1$ is in the ring; b) in a shuffle $[\vecb{c}_1]_1,\ldots,[\vecb{c}_n]_1$, $n=2m$, are cyphertexts and $C([x]_1,\ldots,[x_n]_1)=1$ iff the first $m$ openings are a permutation of the las $m$ openings; c) in Groth-Sahai proofs the openings are the variables and the $C$ outputs 1 iff the variables satisfies the equations. In fact, the only interesting problem which is not of this type is a range proofs and is an interesting questions if there are other problems not of this type.

Using techniques from \cite{EC:GroOstSah06} one can construct NIZK proofs for $\Lang_{ck,C}$ of size $\Theta(|C|)=\Theta(n+|a|)$, since $|C|\leq n+|a|$, which boils down to compute linear shuffles or ring signatures. We have seen on Section~\ref{sec:log-ring-signature} that there exists ring signatures of size $\Theta(\log n)$, combining our results for aZKSMP and the same ``reduction to circuit'' approach. We believe that this is an indication that more efficient proofs for languages $\Lang_{ck,C}$ exists.

\fi
